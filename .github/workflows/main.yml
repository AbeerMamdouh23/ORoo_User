name: Selenium Daily Run

on:
  workflow_dispatch:  # Enables manual triggering of the workflow
  schedule:
    # Runs daily at 06:00 UTC
    - cron: '0 6 * * *'

jobs:
  selenium-test-and-report:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install Allure
      - name: Install Allure
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          curl -sLo allure.tgz https://github.com/allure-framework/allure2/releases/download/2.32.0/allure-2.32.0.tgz
          tar -xzvf allure.tgz -C /opt/
          sudo ln -sf /opt/allure-2.32.0/bin/allure /usr/local/bin/allure
          echo "Verifying Allure installation..."
          /usr/local/bin/allure --version

      # Run tests for all environments sequentially
      - name: Run Selenium Tests and Generate Reports
        run: |
          for ENV in dev staging production; do
            echo "Running tests in $ENV environment"
            
            # Set the base URL dynamically
            case "$ENV" in
              "dev") BASE_URL="https://user.dev-ooro.co.uk/" ;;
              "staging") BASE_URL="https://user.staging-ooro.co.uk/" ;;
              "production") BASE_URL="https://user.ooro.co.uk/" ;;
            esac
            echo "Using BASE_URL: $BASE_URL"
            
            # Run tests and handle failures gracefully
            TEST_RESULTS="test-output/results_${ENV}.xml"
            ALLURE_RESULTS="test-output/allure-results/${ENV}"
            pytest tests/ --junitxml="${TEST_RESULTS}" --alluredir="${ALLURE_RESULTS}" || true
            
            # Generate Allure report
            ALLURE_REPORT="test-output/allure-report-${ENV}"
            allure generate "${ALLURE_RESULTS}" -o "${ALLURE_REPORT}" --clean || true
            
            # Validate report existence
            if [ ! -f "${ALLURE_REPORT}/index.html" ]; then
              echo "Allure report for $ENV not found!" && exit 1
            fi
          done

      # Upload Allure reports as artifacts
      - name: Upload Allure Reports
        uses: actions/upload-artifact@v3
        with:
          name: allure-reports
          path: test-output/allure-report-*/

      # Send Allure reports to Slack
      - name: Send Allure Reports to Slack
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_type: 'html'
          file_path: |
            test-output/allure-report-dev/index.html
            test-output/allure-report-staging/index.html
            test-output/allure-report-production/index.html
          file_name: |
            allure-report-dev.html
            allure-report-staging.html
            allure-report-production.html
          initial_comment: 'Automation Testing Status: Reports for all environments'
