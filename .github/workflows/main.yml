name: Selenium Daily Run

on:
  workflow_dispatch:  # Enables manual triggering of the workflow
  schedule:
    # Runs daily at 00:00 UTC
    - cron: '0 0 * * *'

jobs:
  selenium-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install Allure
      - name: Install Allure
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          curl -sLo allure.tgz https://github.com/allure-framework/allure2/releases/download/2.32.0/allure-2.32.0.tgz
          tar -xzvf allure.tgz -C /opt/
          sudo ln -sf /opt/allure-2.32.0/bin/allure /usr/local/bin/allure
          echo "Verifying Allure installation..."
          /usr/local/bin/allure --version

      # Run Selenium tests
      - name: Run Selenium tests
        run: |
          # Get the absolute path of tests/dummy.py
          DUMMY_TEST_PATH=$(realpath tests/dummy.py)

          # Confirm the path for debugging purposes
          echo "Absolute path of dummy.py: $DUMMY_TEST_PATH"

          # Run pytest with the absolute path
          python -m pytest $DUMMY_TEST_PATH --disable-warnings

      # Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate test-output/allure-results -o test-output/allure-report --single-file --clean

      # Upload test artifacts (e.g., reports)
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: test-output/allure-report

      # Check file existence
      - name: Check file existence
        run: |
          if [ -f test-output/allure-report/index.html ]; then
            echo "File exists: test-output/allure-report/index.html"
          else
            echo "File not found!" && exit 1
          fi

      # Step 1: Get the Upload URL
      - name: Get Slack Upload URL
        id: upload_url
        run: |
          response=$(curl -X POST \
              -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                  "filename": "index.html",
                  "filetype": "html",
                  "channels": "${{ secrets.SLACK_CHANNEL_ID }}"
              }' \
              https://slack.com/api/files.getUploadURLExternal)
          
          echo "upload_url=$(echo $response | jq -r .upload_url)" >> $GITHUB_ENV

      # Step 2: Upload File to Slack using the URL
      - name: Upload Allure Report to Slack
        run: |
          curl -F "file=@test-output/allure-report/index.html" \
               -F "initial_comment=Allure report from Selenium Daily Run" \
               -F "filename=index.html" \
               -F "channels=${{ secrets.SLACK_CHANNEL_ID }}" \
               -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
               ${{ env.upload_url }}

